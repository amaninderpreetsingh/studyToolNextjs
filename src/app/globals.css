@tailwind base;
@tailwind components;
@tailwind utilities; 

:root {
  --primary-color: #121212; /* Example primary color */
  --secondary-color:  #9FE2BF ; /* Example secondary color */
  --accent-color: #00A97F; /* Deep teal */
  --background-color: #2a2a2a; /* Example background color */
  
}

@layer components {
  /* main */
  .main-container {
    display: flex; /* Enables flexbox layout */
    flex-direction: column; /* Stacks children vertically */
    flex-grow: 1; /* Allows the container to grow to fill available space */
    min-height: 100vh; /* Minimum height of the viewport's height */
    padding-bottom: 2.5rem; /* 40px if 1rem = 16px */
    padding-top: 5rem; /* 112px if 1rem = 16px */
  }
  
  /* Assuming 'md' breakpoint is 768px */
  @media (max-width: 768px) {
    .main-container {
      padding-bottom: 8rem; /* 128px if 1rem = 16px */
    }
  }

  /* Sign In - directly mentioned in the use case */
  .signin {
    position: relative;
    width: 100%; /* Adjust the width as needed */
    height: 100vh; /* Adjust the height as needed */
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
    background: #e5eac1;
  }
}

/* Globals that might affect the overall theme or are potentially in use */
.bg-dark-1 {
  background-color: var(--dark-1-color); /* Example variable, ensure it's defined */
}

/* Tailwind's utilities are kept as they provide a wide range of responsive helpers and utilities */


.App {
  display:block;
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  height: 100%;
  background-color: var(--background-color);
  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
}

body {
  color: white;
  margin: 0;
  padding: 0;
  width: 100vw;
  height: 100vh;
  display: flex;
  justify-content: center;}

.Sidebar {
  z-index: 10;
  height: 100%;
  width: 265px;
  flex-shrink: 0; /* Prevents the sidebar from shrinking */
  flex-grow: 0;
  background-color: var(--primary-color)}

.SidebarList {
  height: auto;
  width: 100%;
  padding: 0; 
}

.SidebarList .row {
width: 100%;
height: 60px;
list-style-type: none;
margin: 0;
display: flex;
color: white;
justify-content: center;
align-items: center;
font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
}

.SidebarList .row:hover {
  cursor: pointer;
  background-color: var(--secondary-color);
  color: black; /* Change text color to black */
  transition: background-color 0.5s ease;
}

.row #icon {
  display:flex;
  justify-content: center;
  flex: 30%;
}

.row #title {
  flex: 70%;
}

.ProfileHeader {
  display: flex;
  height: 100px;
  align-items: center;
  background-color: var(--secondary-color);
  padding: 10px;
  margin-bottom: 25px;
  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
  font-size: 1em; /* Normalizing font size */
  font-weight: 700;
  box-sizing: border-box; 
}

.ProfileImage {
  flex-shrink: 0; /* Prevents image container from shrinking */
  width: 50px;
  height: 50px;
  border-radius: 50%; /* Circular image */
  overflow: hidden;
  margin-right: 10px;
  background-color: var(--primary-color); /* Background color for image container */
  display: flex; /* Aligns the image inside the container */
  justify-content: center;
  align-items: center;
}

.ProfileImage img {
  display: block; /* Ensures no additional space around image */
  width: 100%;
  height: auto;
}

.ProfileName {
  color: black; /* Text color for name */
  font-size: 1.5em; /* Adjusted font size for the name */
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 90%;
}

.Heading {
  display: flex;
  justify-content: center; /* Centers content horizontally */
  align-items: center; /* Centers content vertically */
  font-size: 3em; /* Example: Set font size */
  color: white; /* Example: Set text color */
  background-color: var(--primary-color); /* Uses the primary color variable */
  height: 100px; /* Set height */
  width: 100%; /* Stretches across the full width of the viewport */
  margin: 0; /* Removes default margins */
}

.CenterContent {
  padding-left: 10%;
  padding-right: 10%;
  padding-top: 50px;
}

.CenterItem {
  display: flex;
  justify-content: center; /* Centers content horizontally */
  align-items: center; /* Centers content vertically */
}

.AppButton {
  background-color: var(--secondary-color); /* Light green background */
  color: black; /* White text color for contrast */
  border: none; /* No border */
  padding: 10px 20px; /* Vertical and horizontal padding */
  font-size: 1.2rem; /* Text size */
  font-weight: 600;
  border-radius: 5px; /* Rounded corners */
  cursor: pointer; /* Cursor indicates it's clickable */
  transition: background-color 0.3s, transform 0.2s; /* Smooth transition for hover effect and press */
}

.AppButton:hover, .AppButton:focus {
  background-color: var(--accent-color); /* Change to green on hover/focus */
}

.AppButton:active {
  transform: scale(0.98); /* Slightly shrink when clicked */
  background-color: var(--accent-color); /* Maintain green color on click */
}

.Invisible {
  visibility: hidden;
  opacity: 0;
}
/* Global styles */
body {
  margin: 0;
  padding: 0;
  width: 100vw;
  overflow-x: hidden; /* Prevent horizontal scroll */
  font-family: 'Trebuchet MS', 'Lucida Sans Unicode', 'Lucida Grande', 'Lucida Sans', Arial, sans-serif;
}

/* Navbar styles */
.navbar {
  position: fixed; /* Keeps the navbar at the top of the viewport */
  top: 0; /* Aligns navbar to the top edge of the viewport */
  display: flex;
  justify-content: space-between;
  align-items: center;
  width: 100vw;
  height: 80px;
  padding: 0 20px;
  background-color: var(--primary-color);
  color: white;
  z-index: 1000; /* Ensures navbar stays above other content */
}

.logo {
  color: white;
  text-decoration: none;
  font-size: 1.8rem; /* Increased font size for better readability */
  font-weight: 600;
}

.nav-container {
  display: flex;
  align-items: center;
}

.nav-items a {
  color: white;
  text-decoration: none;
  font-size: 1rem; /* Increased font size for better readability */
  font-weight: 400;
  padding-left: 20px;
  padding-right: 20px;
}

.nav-items a:hover {
  color: var(--secondary-color);
  text-decoration: underline;
}

/* Section styles for light and dark themes */
.sectionL, .sectionD {
  padding: 20px 0;
  padding-left: 5%;
  padding-right: 5%;
  width: 100vw;
  text-align: center;
  padding-bottom: 200px;
  margin-top: 0px;
  min-height: 75vh;
}

.sectionL {
  background-color: white;
  color: var(--accent-color);
}

.sectionD {
  background-color: whitesmoke;
  color: var(--accent-color);
}

/* Call to Action (CTA) section styling */
.cta {
  position: relative; /* Needed to position the pseudo-element */
  background-color: var(--secondary-color);
  color: var(--primary-color);
  overflow: hidden; /* Ensures the animation does not overflow the section boundaries */
  height: 75vh;
}

.cta::before {
  content: '';
  position: absolute;
  top: 105%;
  left: 50%;
  width: 20px; /* Initial size of the circle */
  height: 20px; /* Initial size of the circle */
  background: transparent;
  border-radius: 100%;
  animation: ripple 2.5s linear infinite;
  transform: translate(-50%, -50%); /* Centers the circle */
  z-index: 1;
}

@keyframes ripple {
  0% {
    box-shadow: 0 0 0 0 rgba(255, 255, 255, 0.1), 
                0 0 0 250px rgba(255, 255, 255, 0.1), 
                0 0 0 450px rgba(255, 255, 255, 0.1), 
                0 0 0 650px rgba(255, 255, 255, 0.1);
  }
  100% {
    box-shadow: 0 0 0 250px rgba(255, 255, 255, 0), 
                0 0 0 450px rgba(255, 255, 255, 0.1), 
                0 0 0 650px rgba(255, 255, 255, 0.1), 
                0 0 0 850px rgba(255, 255, 255, 0);
  }
}


/* Heading and paragraph styling within sections */
.HomeHeading, .HomePara {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  margin-top: 50px; /* Reduced margin-top for smaller screens */
}

.HomeHeading {
  font-weight: bold;
  font-size: clamp(1rem, 5vw, 10rem); /* Adjusted min, preferred, and max sizes */
  color: var(--primary-color);
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  max-width: 100vw;
  padding: 0 20px;
  box-sizing: border-box;
  z-index: 10;
}



/* Responsive font size adjustment */
@media (max-width: 768px) {
  .HomeHeading {
    font-size: 5em; /* Smaller font size for smaller viewports */
  }
}


.HomePara {
  font-size: clamp(1rem, 2vw, 2rem);
  color: var(--primary-color);
  height:auto;
  margin: 0;
  padding: 100px 10%;
  z-index: 10;
}

 .AppButton:focus, .ctaButton:active {
  background-color: var(--accent-color); /* Unified hover and active state color */
  transform: scale(0.98); /* Active state transformation */
}

.cssbuttons-io-button {
  background: var(--accent-color);
  color: white;
  font-family: inherit;
  padding: 0.35em;
  padding-left: 1.2em;
  font-size: 34px;
  font-weight: 500;
  border-radius: 0.9em;
  border: none;
  letter-spacing: 0.05em;
  display: flex;
  align-items: center;
  box-shadow: inset 0 0 1.6em -0.6em var(--accent-color);
  overflow: hidden;
  position: relative;
  height: 2.8em;
  padding-right: 3.3em;
  cursor: pointer;
  transition: background-color 0.3s, transform 0.2s; /* Keep the transition for consistency */
}

.cssbuttons-io-button .icon {
  background: white;
  margin-left: 1em;
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  height: 2.2em;
  width: 2.2em;
  border-radius: 0.7em;
  box-shadow: 0.1em 0.1em 0.6em 0.2em var(--accent-color);
  right: 0.3em;
  transition: all 0.3s;
}

.cssbuttons-io-button:hover .icon {
  width: calc(100% - 0.6em);
}

.cssbuttons-io-button .icon svg {
  width: 1.1em;
  transition: transform 0.3s;
  color: var(--primary-color); /* Adjust if needed */
}

.cssbuttons-io-button:hover .icon svg {
  transform: translateX(0.1em);
}

.cssbuttons-io-button:active .icon {
  transform: scale(0.95);
}

.button-container {
  display: flex;
  justify-content: center; /* Centers horizontally */
  align-items: center; /* Centers vertically */
  height: 50%; /* Ensure the container has a defined height */
}

.buttonWave {
  padding: 0.8em 1.7em;
  background-color: transparent;
  border-radius: .3em;
  position: relative;
  overflow: hidden;
  cursor: pointer;
  transition: .25s;
  font-weight: 400;
  font-size: 17px;
  border: 1px solid;
  font-family: inherit;
  text-transform: uppercase;
  color: var(--accent-color);
  z-index: 1;
 }
 
 .buttonWave::before, .buttonWave::after {
  content: '';
  display: block;
  width: 50px;
  height: 50px;
  transform: translate(-50%, -50%);
  position: absolute;
  border-radius: 50%;
  z-index: -1;
  background-color: var(--accent-color);
  transition: 1s ease;
 }
 
 .buttonWave::before {
  top: -1em;
  left: -1em;
 }
 
 .buttonWave::after {
  left: calc(100% + 1em);
  top: calc(100% + 1em);
 }
 
 .buttonWave:hover::before, .buttonWave:hover::after {
  height: 410px;
  width: 410px;
 }
 
 .buttonWave:hover {
  color: rgb(10, 25, 30);
 }
 
 .buttonWave:active {
  filter: brightness(.8);
 }
 